name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pvz_service
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: Install Protobuf Compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler

    - name: Install protoc plugins
      run: |
        go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
        echo "${HOME}/go/bin" >> $GITHUB_PATH

    - name: Generate proto files
      run: |
        chmod +x scripts/generate-proto.sh
        ./scripts/generate-proto.sh

    - name: Install migrate
      run: go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

    - name: Run migrations
      run: migrate -path ./migrations -database "postgres://postgres:postgres@localhost:5432/pvz_service?sslmode=disable" up

    - name: Build
      run: go build -v ./...

    - name: Test
      run: |
        go test -cover ./cmd/integration
        go test -cover ./internal/handler
        go test -cover ./internal/middleware
        go test -cover ./internal/repository
        go test -cover ./internal/service/auth
        go test -cover ./internal/service/grpc
        go test -cover ./internal/service/product
        go test -cover ./internal/service/pvz
        go test -cover ./internal/service/reception
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres  
        DB_NAME: pvz_service
        DB_SSLMODE: disable
